{"version":3,"sources":["C:/Users/RMaet/git/MomokoWeb/trunk/momoko-frontend/src/main/frontend/src async","C:/Users/RMaet/git/MomokoWeb/trunk/momoko-frontend/src/main/frontend/src/app/app.component.ts","C:/Users/RMaet/git/MomokoWeb/trunk/momoko-frontend/src/main/frontend/src/app/app.module.ts","C:/Users/RMaet/git/MomokoWeb/trunk/momoko-frontend/src/main/frontend/src/app/dtos/autor.ts","C:/Users/RMaet/git/MomokoWeb/trunk/momoko-frontend/src/main/frontend/src/app/dtos/editorial.ts","C:/Users/RMaet/git/MomokoWeb/trunk/momoko-frontend/src/main/frontend/src/app/dtos/genero.ts","C:/Users/RMaet/git/MomokoWeb/trunk/momoko-frontend/src/main/frontend/src/app/editor-libro.component.html","C:/Users/RMaet/git/MomokoWeb/trunk/momoko-frontend/src/main/frontend/src/app/libro-detail.component.ts","C:/Users/RMaet/git/MomokoWeb/trunk/momoko-frontend/src/main/frontend/src/app/libro.service.ts","C:/Users/RMaet/git/MomokoWeb/trunk/momoko-frontend/src/main/frontend/src/app/libro.ts","C:/Users/RMaet/git/MomokoWeb/trunk/momoko-frontend/src/main/frontend/src/environments/environment.ts","C:/Users/RMaet/git/MomokoWeb/trunk/momoko-frontend/src/main/frontend/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/RMaet/git/MomokoWeb/trunk/momoko-frontend/src/main/frontend/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\n\nimport { Libro } from './libro';\nimport { LibroService } from './libro.service';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <h1>{{title}}</h1>\n    <h2>Mis libros</h2>\n    <ul class=\"libros\">\n      <li *ngFor=\"let libro of libros\"\n        [class.selected]=\"libro === selectedLibro\"\n        (click)=\"onSelect(libro)\">\n        <span class=\"badge\">{{libro.libroId}}</span> {{libro.titulo}}\n      </li>\n    </ul>\n    <libro-detail [libro]=\"selectedLibro\"></libro-detail>\n  `,\n  styles: [`\n    .selected {\n      background-color: #CFD8DC !important;\n      color: white;\n    }\n    .libros {\n      margin: 0 0 2em 0;\n      list-style-type: none;\n      padding: 0;\n      width: 15em;\n    }\n    .libros li {\n      cursor: pointer;\n      position: relative;\n      left: 0;\n      background-color: #EEE;\n      margin: .5em;\n      padding: .3em 0;\n      height: 1.6em;\n      border-radius: 4px;\n      box-sizing: content-box;\n    }\n    .libros li.selected:hover {\n      background-color: #BBD8DC !important;\n      color: white;\n    }\n    .libros li:hover {\n      color: #607D8B;\n      background-color: #DDD;\n      left: .1em;\n    }\n    .libros .text {\n      position: relative;\n      top: -3px;\n    }\n    .libros .badge {\n      display: inline-block;\n      font-size: small;\n      color: white;\n      padding: 0.8em 0.7em 0 0.7em;\n      background-color: #607D8B;\n      line-height: 1em;\n      position: relative;\n      left: -1px;\n      top: -4px;\n      height: 1.8em;\n      margin-right: .8em;\n      border-radius: 4px 0 0 4px;\n    }\n  `],\n  providers: [LibroService]\n})\nexport class AppComponent implements OnInit {\n  title = 'Libros';\n  libros: Libro[];\n  selectedLibro: Libro;\n\n  constructor(private libroService: LibroService) { }\n\n  getLibros(): void {\n    this.libroService.getLibros().then(libros => this.libros = libros);\n  }\n\n  ngOnInit(): void {\n    this.getLibros();\n  }\n\n  onSelect(libro: Libro): void {\n    this.selectedLibro = libro;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/RMaet/git/MomokoWeb/trunk/momoko-frontend/src/main/frontend/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { LibroDetailComponent } from './libro-detail.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LibroDetailComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/RMaet/git/MomokoWeb/trunk/momoko-frontend/src/main/frontend/src/app/app.module.ts","export class Autor {\r\n  autorId: number;\r\n  nombre: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/RMaet/git/MomokoWeb/trunk/momoko-frontend/src/main/frontend/src/app/dtos/autor.ts","export class Editorial {\r\n  editorialId: number;\r\n  nombre: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/RMaet/git/MomokoWeb/trunk/momoko-frontend/src/main/frontend/src/app/dtos/editorial.ts","export class Genero {\r\n  generoId: number;\r\n  nombre: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/RMaet/git/MomokoWeb/trunk/momoko-frontend/src/main/frontend/src/app/dtos/genero.ts","module.exports = \"<div *ngIf=\\\"libro\\\" class=\\\"form-container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-8\\\">\\r\\n      <div class=\\\"vanilla vanilla-form\\\" novalidate=\\\"novalidate\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-12 rp10\\\">\\r\\n            <div class=\\\"form-field\\\">\\r\\n              <h4> Título del libro: </h4>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-12 lp10\\\">\\r\\n            <div class=\\\"form-field\\\">\\r\\n              <label>\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"libro.titulo\\\" placeholder=\\\"Escribe aquí el título del libro\\\"/>\\r\\n              </label>\\r\\n            </div>\\r\\n            <!--/.form-field -->\\r\\n          </div>\\r\\n          <div class=\\\"divide10\\\"></div>\\r\\n\\r\\n          <div class=\\\"col-sm-12 lp10\\\">\\r\\n            <h4> Autor de la obra <a href=\\\"#\\\"> <i class=\\\"ion-plus\\\"></i> </a> </h4>\\r\\n          </div>\\r\\n          <div *ngFor=\\\"let autor of libro.autores\\\">\\r\\n            <div class=\\\"col-sm-12 lp10\\\">\\r\\n              <div class=\\\"form-field\\\">\\r\\n                <label>\\r\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"autor.nombre\\\" placeholder=\\\"Escribe aquí al autor de la obra\\\">\\r\\n                </label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"divide10\\\"></div>\\r\\n          <div class=\\\"col-sm-3 lp10\\\">\\r\\n            <h4> Editorial </h4>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-9 lp10\\\">\\r\\n            <div class=\\\"form-field\\\">\\r\\n              <label>\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"libro.editorial.nombre\\\" placeholder=\\\"Nombre de la editorial\\\">\\r\\n              </label>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"divide10\\\"></div>\\r\\n\\r\\n          <div class=\\\"col-sm-3 lp10\\\">\\r\\n            <h4> Año de edición </h4>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-sm-9 lp10\\\">\\r\\n            <div class=\\\"form-field\\\">\\r\\n              <label>\\r\\n                <input type=\\\"number\\\" [(ngModel)]=\\\"libro.anoEdicion\\\" placeholder=\\\"Año de edición\\\" required=\\\"required\\\">\\r\\n              </label>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"divide10\\\"></div>\\r\\n\\r\\n          <div class=\\\"col-sm-3 lp10\\\">\\r\\n            <h4> Género de la obra </h4>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-sm-9 lp10\\\">\\r\\n            <div class=\\\"form-field\\\">\\r\\n              <label class=\\\"custom-select\\\">\\r\\n                <select class=\\\"form-control\\\"  id=\\\"genero\\\"\\r\\n                      required\\r\\n                      [(ngModel)]=\\\"libro.generos.name\\\" name=\\\"genero\\\">\\r\\n                      <option *ngFor=\\\"let genero of generosList\\\" [value]=\\\"genero.generoId\\\">{{genero.nombre}}</option>\\r\\n                </select>\\r\\n                      <select name=\\\"department\\\" required=\\\"required\\\">\\r\\n                        <option value=\\\"\\\">Selección múltiple  </option>\\r\\n                        <option value=\\\"Sales\\\">Artbooks </option>\\r\\n                        <option value=\\\"Marketing\\\">Libros académicos </option>\\r\\n                        <option value=\\\"Support\\\">Libros especializados </option>\\r\\n                        <option value=\\\"Other\\\">Clásicos</option>\\r\\n                        <option value=\\\"Other\\\">Comedia </option>\\r\\n                        <option value=\\\"Other\\\">Erótica</option>\\r\\n                        <option value=\\\"Other\\\">Fantasía</option>\\r\\n                        <option value=\\\"Other\\\">Histórica</option>\\r\\n                        <option value=\\\"Other\\\">Misterio</option>\\r\\n                        <option value=\\\"Other\\\">Novela </option>\\r\\n                        <option value=\\\"Other\\\">Romance </option>\\r\\n                        <option value=\\\"Other\\\">Juvenil</option>\\r\\n                        <option value=\\\"Other\\\">Teatro</option>\\r\\n                        <option value=\\\"Other\\\">Terror</option>\\r\\n                        <option value=\\\"Other\\\">Cómic europeo</option>\\r\\n                        <option value=\\\"Other\\\">Cómic americano</option>\\r\\n                        <option value=\\\"Other\\\">Manga</option>\\r\\n                        <option value=\\\"Other\\\">Autoayuda</option>\\r\\n                        <option value=\\\"Other\\\">Libros de cocina</option>\\r\\n                        <option value=\\\"Other\\\">Novela negra / Thriller </option>\\r\\n                        <option value=\\\"Other\\\">Existencialismo</option>\\r\\n                        <option value=\\\"Other\\\">Otros (indica cual)</option>\\r\\n                      </select>\\r\\n                      <span><!-- fake select handler --></span> </label>\\r\\n            </div>\\r\\n            <!--/.form-field -->\\r\\n          </div>\\r\\n          <!--/column -->\\r\\n\\r\\n\\r\\n          <div class=\\\"col-sm-12\\\">\\r\\n\\r\\n\\r\\n            <div class=\\\"radio-set\\\">\\r\\n              <h4> ¿Forma parte de una saga? </h4>\\r\\n              <label>\\r\\n                      <input type=\\\"radio\\\" name=\\\"subject\\\" value=\\\"General\\\">\\r\\n                      <span></span> No </label>\\r\\n              <label>\\r\\n                      <input type=\\\"radio\\\" name=\\\"subject\\\" value=\\\"Hi\\\">\\r\\n                      <span><!-- fake radio --></span> Sí </label>\\r\\n\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n\\r\\n            <h4> Breve resumen de la obra </h4>\\r\\n            <textarea name=\\\"resumen\\\" [(ngModel)]=\\\"libro.resumen\\\" placeholder=\\\"Type your message here...\\\"></textarea>\\r\\n\\r\\n\\r\\n            <h4> Cita identificativa </h4>\\r\\n            <textarea name=\\\"cita\\\" [(ngModel)]=\\\"libro.citaLibro\\\" placeholder=\\\"Type your message here...\\\"></textarea>\\r\\n\\r\\n            <input type=\\\"submit\\\" class=\\\"btn btn-forest\\\" value=\\\"Actualizar ficha\\\" data-error=\\\"Fix errors\\\" data-processing=\\\"Sending...\\\" data-success=\\\"Thank you!\\\">\\r\\n\\r\\n           <footer class=\\\"notification-box\\\"></footer>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      </div>\\r\\n\\r\\n      <aside class=\\\"col-sm-4 sidebar\\\">\\r\\n        <div class=\\\"sidebox widget\\\">\\r\\n\\r\\n          <img src=\\\"{{libro.urlImagen}}\\\">\\r\\n          <h2 class=\\\"section-title widget-title margen_superior\\\">Imagen del libro </h2>\\r\\n\\r\\n          <input type=\\\"file\\\" class=\\\"form-control-file\\\" id=\\\"exampleInputFile\\\" aria-describedby=\\\"fileHelp\\\">\\r\\n\\r\\n\\r\\n\\r\\n          <h4 class=\\\"margen_superior\\\"> Enlace Amazon </h4>\\r\\n\\r\\n          <div class=\\\"form-field\\\">\\r\\n            <label>\\r\\n                      <input type=\\\"email\\\" [(ngModel)]=\\\"libro.enlaceAmazon\\\" placeholder=\\\"Enlace de amazon\\\">\\r\\n                    </label>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        <!-- /.widget -->\\r\\n\\r\\n      </aside>\\r\\n    </div>\\r\\n  </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/RMaet/git/MomokoWeb/trunk/momoko-frontend/src/main/frontend/src/app/editor-libro.component.html\n// module id = ../../../../../src/app/editor-libro.component.html\n// module chunks = 1","import { Component, Input } from '@angular/core';\r\nimport { Libro } from './libro';\r\n\r\n@Component({\r\n  selector: 'libro-detail',\r\n  templateUrl: './editor-libro.component.html'\r\n})\r\nexport class LibroDetailComponent {\r\n  @Input() libro: Libro;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/RMaet/git/MomokoWeb/trunk/momoko-frontend/src/main/frontend/src/app/libro-detail.component.ts","import { Editorial } from './dtos/editorial';\r\nimport { Injectable, OnInit } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Headers, Http } from '@angular/http';\r\n\r\nimport { Libro } from './libro';\r\nimport { Genero } from './dtos/genero';\r\nimport { Autor } from './dtos/autor';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\n@Injectable()\r\nexport class LibroService{\r\n\r\n  private librosUrl = 'http://localhost:8080/modelo/libros';  // URL to web api\r\n  private generosUrl = 'http://localhost:8080/modelo/generos';\r\n\r\n  results: string[];\r\n\r\n  librosList: Libro[] = new Array();\r\n  allGenerosList: Genero[] = new Array();\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getLibros(): Promise<Libro[]> {\r\n\r\n\r\n    this.http.get(this.librosUrl).toPromise().then((resp:Response) => {\r\n\r\n      for(var numLibro in resp){\r\n        var l = new Libro();\r\n        let json = resp[numLibro];\r\n        l.libroId = json.libroId;\r\n        l.sagaId = json.sagaId;\r\n        l.anoEdicion =  json.anoEdicion;\r\n        l.citaLibro =  json.citaLibro;\r\n        l.resumen = json.resumen;\r\n        l.enlaceAmazon = json.enlaceAmazon;\r\n        l.urlImagen = json.urlImagen;\r\n        l.titulo = json.titulo;\r\n        var editorial = new Editorial();\r\n        editorial.editorialId = json.editorial.editorialId;\r\n        editorial.nombre = json.editorial.nombreEditorial;\r\n        l.editorial = editorial;\r\n        var autoresList = new Array();\r\n        for (var numAutor in json.autores){\r\n          var a = new Autor();\r\n          let jsonAutor = json.autores[numAutor];\r\n          a.autorId = jsonAutor.autorId;\r\n          a.nombre = jsonAutor.nombre;\r\n          autoresList.push(a);\r\n        }\r\n        l.autores = autoresList;\r\n        var generosList = new Array();\r\n        for (var numGenero in json.generos){\r\n          var genero = new Genero();\r\n          let jsonGenero = json.generos[numAutor];\r\n          genero.generoId = jsonGenero.generoId;\r\n          genero.nombre = jsonGenero.nombre;\r\n          generosList.push(genero);\r\n          console.log(this.allGenerosList.indexOf(genero));\r\n          if (this.allGenerosList.indexOf(genero) !== -1){\r\n            this.allGenerosList.push(genero);\r\n          }\r\n        }\r\n        l.generos = generosList;\r\n        console.log(l);\r\n        this.librosList.push(l);\r\n      }\r\n\r\n      return this.librosList;\r\n\r\n    });\r\n    return Promise.resolve(this.librosList);\r\n  }\r\n\r\n  getGeneros(): Promise<Genero[]> {\r\n    this.http.get(this.generosUrl).toPromise().then((resp:Response) => {\r\n\r\n      for(var numGenero in resp){\r\n        var g = new Genero();\r\n        let json = resp[numGenero];\r\n        g.generoId = json.generoId;\r\n        g.nombre = json.nombre;\r\n        this.allGenerosList.push(g);\r\n      }\r\n\r\n      return this.allGenerosList;\r\n\r\n    });\r\n    return Promise.resolve(this.allGenerosList);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/RMaet/git/MomokoWeb/trunk/momoko-frontend/src/main/frontend/src/app/libro.service.ts","import { Genero } from './dtos/genero';\r\nimport { Editorial } from './dtos/editorial';\r\nimport { Autor } from './dtos/autor';\r\n\r\n\r\nexport class Libro {\r\n  libroId: number;\r\n  sagaId: number;\r\n  editorial: Editorial;\r\n  generos: Genero[];\r\n  anoEdicion: number;\r\n  citaLibro: string;\r\n  resumen: string;\r\n  enlaceAmazon: string;\r\n  urlImagen: string;\r\n  titulo: string;\r\n  autores: Autor[];\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/RMaet/git/MomokoWeb/trunk/momoko-frontend/src/main/frontend/src/app/libro.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/RMaet/git/MomokoWeb/trunk/momoko-frontend/src/main/frontend/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/RMaet/git/MomokoWeb/trunk/momoko-frontend/src/main/frontend/src/main.ts"],"sourceRoot":"webpack:///"}